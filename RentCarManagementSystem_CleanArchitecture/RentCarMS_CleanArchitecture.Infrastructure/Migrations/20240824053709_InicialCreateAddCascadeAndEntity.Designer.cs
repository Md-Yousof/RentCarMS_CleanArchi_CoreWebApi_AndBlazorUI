// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentCarMS_CleanArchitecture.Infrastructure.DATA.Context;

#nullable disable

namespace RentCarMS_CleanArchitecture.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240824053709_InicialCreateAddCascadeAndEntity")]
    partial class InicialCreateAddCascadeAndEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.Cars.Car", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarID"));

                    b.Property<string>("LicensePlaete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quentity")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CarID");

                    b.ToTable("cars");
                });

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.DuePayments.DuePayment", b =>
                {
                    b.Property<int>("DuePaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DuePaymentID"));

                    b.Property<decimal>("DueAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RentCarDetailID")
                        .HasColumnType("int");

                    b.Property<int>("RentCarID")
                        .HasColumnType("int");

                    b.HasKey("DuePaymentID");

                    b.HasIndex("RentCarDetailID");

                    b.HasIndex("RentCarID");

                    b.ToTable("duePayments");
                });

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.Members.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberID"));

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberID");

                    b.ToTable("members");
                });

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.Payments.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<int?>("AdvanceInstallMent")
                        .HasColumnType("int");

                    b.Property<int?>("NofInstallMent")
                        .HasColumnType("int");

                    b.Property<decimal>("PaidAmmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RentCarDetailID")
                        .HasColumnType("int");

                    b.Property<int>("RentCarID")
                        .HasColumnType("int");

                    b.HasKey("PaymentID");

                    b.HasIndex("RentCarID");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.RentCarDetails.RentCarDetail", b =>
                {
                    b.Property<int>("RentCarDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentCarDetailID"));

                    b.Property<int>("CarID")
                        .HasColumnType("int");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsReturn")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MonthlyFeeInstallment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NoOfInstallment")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RentCarID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TotalFee")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("RentCarDetailID");

                    b.HasIndex("CarID");

                    b.HasIndex("RentCarID");

                    b.ToTable("rentCarDetails");
                });

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.RentCars.RentCar", b =>
                {
                    b.Property<int>("RentCarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentCarID"));

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentCarDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RentCarID");

                    b.HasIndex("MemberID");

                    b.ToTable("rentCars");
                });

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.DuePayments.DuePayment", b =>
                {
                    b.HasOne("RentCarMS_CleanArchitecture.Domain.RentCarDetails.RentCarDetail", "RentCarDetail")
                        .WithMany()
                        .HasForeignKey("RentCarDetailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarMS_CleanArchitecture.Domain.RentCars.RentCar", "RentCar")
                        .WithMany("DuePayments")
                        .HasForeignKey("RentCarID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RentCar");

                    b.Navigation("RentCarDetail");
                });

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.Payments.Payment", b =>
                {
                    b.HasOne("RentCarMS_CleanArchitecture.Domain.RentCars.RentCar", "RentCar")
                        .WithMany("Payments")
                        .HasForeignKey("RentCarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RentCar");
                });

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.RentCarDetails.RentCarDetail", b =>
                {
                    b.HasOne("RentCarMS_CleanArchitecture.Domain.Cars.Car", "Car")
                        .WithMany("RentCarDetails")
                        .HasForeignKey("CarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RentCarMS_CleanArchitecture.Domain.RentCars.RentCar", "RentCar")
                        .WithMany("RentCarDetails")
                        .HasForeignKey("RentCarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("RentCar");
                });

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.RentCars.RentCar", b =>
                {
                    b.HasOne("RentCarMS_CleanArchitecture.Domain.Members.Member", "Member")
                        .WithMany("RentCars")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.Cars.Car", b =>
                {
                    b.Navigation("RentCarDetails");
                });

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.Members.Member", b =>
                {
                    b.Navigation("RentCars");
                });

            modelBuilder.Entity("RentCarMS_CleanArchitecture.Domain.RentCars.RentCar", b =>
                {
                    b.Navigation("DuePayments");

                    b.Navigation("Payments");

                    b.Navigation("RentCarDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
